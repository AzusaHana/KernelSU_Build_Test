name: Build Pixel Lunna Kernel

on:
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  build:
    name: Build Kernel by ${{ github.actor }}
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    
    - name: Set swap to 10G
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10
    
    - name: Setup build kernel environment
      run: |
        echo "BUILD_TIME=$(TZ=Asia/Shanghai date "+%y%m%d")" >> $GITHUB_ENV
        echo "BUILD_TIME_1=$(TZ=Asia/Shanghai date "+%Y-%m-%d")" >> $GITHUB_ENV
        sudo apt-get update
        sudo apt-get install git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib bzip2 libbz2-dev liblz4-tool make squashfs-tools dpkg-dev libssl-dev python2 python3 bc libc6-dev-i386 libncurses5-dev
        mkdir -p $GITHUB_WORKSPACE/kernel_workspace
    
    - name: Download Clang-aosp
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        mkdir clang-aosp
        wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r522817.tar.gz
        tar -C clang-aosp/ -zxvf clang-r522817.tar.gz

    - name: Download kernel source
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone --recursive https://github.com/Slimreaper02/kernel_oneplus_sm8350 -b fifteen android-kernel --depth=1
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel/scripts
        sed -i 's/ -dirty//g' setlocalversion
        cd $GITHUB_WORKSPACE/patches
        sed -i '1687 r path_umount.c' $GITHUB_WORKSPACE/kernel_workspace/android-kernel/fs/namespace.c

    - name: Setup rsuntk KernelSU
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        curl -LSs "https://raw.githubusercontent.com/rsuntk/KernelSU/main/kernel/setup.sh" | bash -s main
        KSU_VERSION=$(cd KernelSU && expr $(/usr/bin/git rev-list --count HEAD) + 10200)
        echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV

    - name: Apply SUSFS Patches
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        git clone https://gitlab.com/simonpunk/susfs4ksu.git susfs4ksu
        cp susfs4ksu/kernel_patches/fs/susfs.c fs/
        cp susfs4ksu/kernel_patches/include/linux/susfs.h include/linux/
        cp susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch KernelSU/
        for patch in susfs4ksu/kernel_patches/50_add_susfs_in_kernel-*.patch; do
          patch -p1 < "$patch" || echo "Patch $patch failed, manual patching may be required"
        done
        echo "CONFIG_KSU_SUSFS=y" >> arch/arm64/configs/vendor/lahaina-qgki_defconfig
   
    - name: Build kernel for lunaa
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        export ARCH=arm64
        export SUBARCH=arm64
        export PATH=$GITHUB_WORKSPACE/kernel_workspace/clang-aosp/bin:$PATH
        export KBUILD_BUILD_HOST=Github-Action
        export KBUILD_BUILD_USER=$(echo ${{ github.actor }} | tr A-Z a-z)
        BA_CMD="CLANG_TRIPLE=aarch64-linux-gnu-"
        EX_CMD="LD=ld.lld LLVM=1 LLVM_IAS=1"
        DEFCONFIG="vendor/lahaina-qgki_defconfig vendor/oplus_yupik_QGKI.config"
        make O=out ARCH=arm64 CC=clang $BA_CMD $EX_CMD $DEFCONFIG
        make -j$(nproc --all) O=out ARCH=arm64 CC=clang $BA_CMD $EX_CMD

    - name: Check a kernel output files
      run: |
       cd $GITHUB_WORKSPACE/kernel_workspace
       if [ -f android-kernel/out/arch/arm64/boot/Image ]; then
           echo "CHECK_IMAGE=true" >> $GITHUB_ENV
       else
           echo "Kernel output file is empty"
           exit 1
       fi

    - name: Make Anykernel3
      if: env.CHECK_IMAGE == 'true'
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone https://github.com/osm0sis/AnyKernel3 --depth=1 AnyKernel3
        sed -i 's/do.devicecheck=1/do.devicecheck=0/g' AnyKernel3/anykernel.sh
        sed -i 's!BLOCK=/dev/block/platform/omap/omap_hsmmc.0/by-name/boot;!BLOCK=auto;!g' AnyKernel3/anykernel.sh
        sed -i 's/IS_SLOT_DEVICE=0;/IS_SLOT_DEVICE=auto;/g' AnyKernel3/anykernel.sh
        cp android-kernel/out/arch/arm64/boot/Image AnyKernel3/
        rm -rf AnyKernel3/.git* AnyKernel3/README.md

    - name: Upload image of lunaa
      if: env.CHECK_IMAGE == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: Image-lunaa-${{ env.KSUVER }}
        path: kernel_workspace/android-kernel/out/arch/arm64/boot/Image

    - name: Upload AnyKernel3 of lunaa
      if: env.CHECK_IMAGE == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: AK3-PixelOS-lunaa-${{ env.KSUVER }}-${{ env.BUILD_TIME }}
        path: kernel_workspace/AnyKernel3/*
